version: '3.4'

# This Compose file is expected to be used with the testnet-up.sh script.
# The volumes below mount the configs generated by the script into each
# service.

volumes:
  l1_data:
  l2_data:
  l2_data2:
  op_log:
  op_log2:
  near_lc:

services:
  # Not needed for non-devnet deployments, but useful for testing.
  l1:
    image: us-docker.pkg.dev/pagoda-solutions-dev/rollup-data-availability/op-l1:latest
    env_file:
      - .env
    ports:
      - '8545:8545'
      - '7060:6060'
    volumes:
      - 'l1_data:/db'
      - '${PWD}/../.testnet/genesis-l1.json:/genesis.json'
      - '${PWD}/test-jwt-secret.txt:/config/test-jwt-secret.txt'

  l2:
    image: us-docker.pkg.dev/pagoda-solutions-dev/rollup-data-availability/op-l2:latest
    env_file:
      - .env
    ports:
      - '9545:8545'
      - '8060:6060'
    volumes:
      - 'l2_data:/db'
      - '${PWD}/../.testnet/genesis-l2.json:/genesis.json'
      - '${PWD}/test-jwt-secret.txt:/config/test-jwt-secret.txt'
    entrypoint: # pass the L2 specific flags by overriding the entry-point and adding extra arguments
      - '/bin/sh'
      - '/entrypoint.sh'
      - '--authrpc.jwtsecret=/config/test-jwt-secret.txt'

  op-node:
    image: us-docker.pkg.dev/pagoda-solutions-dev/rollup-data-availability/op-node:latest
    depends_on:
      - l1
      - l2
    env_file:
      - .env
    command: >
      op-node
      --l1=ws://l1:8546
      --l2=http://l2:8551
      --l2.jwt-secret=/config/test-jwt-secret.txt
      --sequencer.enabled
      --sequencer.l1-confs=0
      --verifier.l1-confs=0
      --p2p.sequencer.key=8b3a350cf5c34c9194ca85829a2df0ec3153be0318b5e2d3348e872092edffba
      --rollup.config=/rollup.json
      --rpc.addr=0.0.0.0
      --rpc.port=8545
      --p2p.listen.ip=0.0.0.0
      --p2p.listen.tcp=9003
      --p2p.listen.udp=9003
      --p2p.scoring.peers=light
      --p2p.ban.peers=true
      --snapshotlog.file=/op_log/snapshot.log
      --p2p.priv.path=/config/p2p-node-key.txt
      --metrics.enabled
      --metrics.addr=0.0.0.0
      --metrics.port=7300
      --pprof.enabled
      --rpc.enable-admin
      --da-account=${DA_ACCOUNT}
      --da-contract=${DA_CONTRACT}
      --da-key=${DA_KEY}
      --namespace-id=${NAMESPACE_ID}
      #--p2p.static=/dns/op-node2/tcp/9003/udp/9003
    ports:
      - '7545:8545'
      - '9003:9003'
      - '7300:7300'
      - '6060:6060'
    volumes:
      - '${PWD}/p2p-sequencer-key.txt:/config/p2p-sequencer-key.txt'
      - '${PWD}/p2p-node-key.txt:/config/p2p-node-key.txt'
      - '${PWD}/test-jwt-secret.txt:/config/test-jwt-secret.txt'
      - '${PWD}/../.testnet/rollup.json:/rollup.json'
      - op_log:/op_log


  l22:
    image: us-docker.pkg.dev/pagoda-solutions-dev/rollup-data-availability/op-l2:latest
    env_file:
      - .env
    ports:
      - '9546:8545'
      - '8061:6060'
    volumes:
      - 'l2_data2:/db'
      - '${PWD}/../.testnet/genesis-l2.json:/genesis.json'
      - '${PWD}/test-jwt-secret2.txt:/config/test-jwt-secret.txt'
    entrypoint: # pass the L2 specific flags by overriding the entry-point and adding extra arguments
      - '/bin/sh'
      - '/entrypoint.sh'
      - '--authrpc.jwtsecret=/config/test-jwt-secret.txt'

  op-node2:
    image: us-docker.pkg.dev/pagoda-solutions-dev/rollup-data-availability/op-node:latest
    depends_on:
      - l1
      - l22
    env_file:
      - .env
    command: >
      op-node
      --l1=ws://l1:8546
      --l2=http://l22:8551
      --l2.jwt-secret=/config/test-jwt-secret.txt
      --verifier.l1-confs=0
      --p2p.sequencer.key=8b3a350cf5c34c9194ca85829a2df0ec3153be0318b5e2d3348e872092edffba
      --rollup.config=/rollup.json
      --rpc.addr=0.0.0.0
      --rpc.port=8545
      --p2p.listen.ip=0.0.0.0
      --p2p.listen.tcp=9003
      --p2p.listen.udp=9003
      --p2p.scoring.peers=light
      --p2p.ban.peers=true
      --snapshotlog.file=/op_log/snapshot.log
      --p2p.priv.path=/config/p2p-node-key.txt
      --metrics.enabled
      --metrics.addr=0.0.0.0
      --metrics.port=7300
      --pprof.enabled
      --rpc.enable-admin
      --da-account=${DA_ACCOUNT}
      --da-contract=${DA_CONTRACT}
      --da-key=${DA_KEY}
      --namespace-id=${NAMESPACE_ID}
    ports:
      - '7546:8545'
      - '9005:9003'
      - '7303:7300'
      - '6063:6060'
    volumes:
      - '${PWD}/p2p-sequencer-key.txt:/config/p2p-sequencer-key.txt'
      - '${PWD}/p2p-node-key.txt:/config/p2p-node-key.txt'
      - '${PWD}/test-jwt-secret2.txt:/config/test-jwt-secret.txt'
      - '${PWD}/../.testnet/rollup.json:/rollup.json'
      - op_log2:/op_log

  op-proposer:
    image: us-docker.pkg.dev/pagoda-solutions-dev/rollup-data-availability/op-proposer:latest
    depends_on:
      - l1
      - l2
      - op-node
    env_file:
      - .env
    ports:
      - '6062:6060'
      - '7302:7300'
    environment:
      OP_PROPOSER_POLL_INTERVAL: 1s
      OP_PROPOSER_NUM_CONFIRMATIONS: 1
      OP_PROPOSER_SAFE_ABORT_NONCE_TOO_LOW_COUNT: 3
      OP_PROPOSER_RESUBMISSION_TIMEOUT: 30s
      OP_PROPOSER_PPROF_ENABLED: 'true'
      OP_PROPOSER_METRICS_ENABLED: 'true'
      OP_PROPOSER_ALLOW_NON_FINALIZED: 'false'

  op-batcher:
    image: us-docker.pkg.dev/pagoda-solutions-dev/rollup-data-availability/op-batcher:latest
    depends_on:
      l1:
        condition: service_started
      l2:
        condition: service_started
      op-node:
        condition: service_started
    build:
      context: ../../
      dockerfile: ./optimism/op-batcher/Dockerfile
    env_file:
      - .env
    ports:
      - '6061:6060'
      - '7301:7300'
      - '6545:8545'
    environment:
      OFFLINE_GAS_ESTIMATION: null
      OP_BATCHER_MAX_CHANNEL_DURATION: 1
      OP_BATCHER_MAX_L1_TX_SIZE_BYTES: 120000
      OP_BATCHER_TARGET_L1_TX_SIZE_BYTES: 100000
      OP_BATCHER_TARGET_NUM_FRAMES: 1
      OP_BATCHER_APPROX_COMPR_RATIO: 0.4
      OP_BATCHER_SUB_SAFETY_MARGIN: 4 # SWS is 15, ChannelTimeout is 40
      OP_BATCHER_POLL_INTERVAL: 1s
      OP_BATCHER_NUM_CONFIRMATIONS: 1
      OP_BATCHER_SAFE_ABORT_NONCE_TOO_LOW_COUNT: 3
      OP_BATCHER_RESUBMISSION_TIMEOUT: 30s
      OP_BATCHER_SEQUENCER_HD_PATH: "m/44'/60'/0'/0/2"
      OP_BATCHER_PPROF_ENABLED: 'true'
      OP_BATCHER_METRICS_ENABLED: 'true'
      OP_BATCHER_RPC_ENABLE_ADMIN: 'true'

  stateviz:
    image: us-docker.pkg.dev/pagoda-solutions-dev/rollup-data-availability/op-stateviz:latest
    command:
      - stateviz
      - -addr=0.0.0.0:8080
      - -snapshot=/op_log/snapshot.log
      - -refresh=10s
    ports:
      - '9090:8080'
    volumes:
      - op_log:/op_log:ro

  light-client:
    image: ghcr.io/near/near-light-client/light-client:latest
    environment:
      RUST_LOG: info,near_offchain_light_client=debug
      NEAR_LIGHT_CLIENT_CONFIG_FILE: /var/light-client.toml
      NEAR_LIGHT_CLIENT_STATE_PATH: /var/db
      NEAR_LIGHT_CLIENT_NETWORK: Testnet
    ports:
      - '3000:3000'
    volumes:
      - near_lc:/var/db
      - ${PWD}/light-client.toml:/var/light-client.toml
