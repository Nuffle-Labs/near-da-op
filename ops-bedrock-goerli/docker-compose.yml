version: '3.4'

# This Compose file is expected to be used with the testnet-up.sh script.
# The volumes below mount the configs generated by the script into each
# service.

volumes:
  l1_data:
  l2_data:
  op_log:

services:
  # l2:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile.l2
  #     # cache_from:
  #     #   - type=local,src=/tmp/l2-geth-cache
  #     # cache_to:
  #     #   - type=local,src=/tmp/l2-geth-cache
  #     # tags:
  #     #   - 'near/op-geth-l2:latest'
  #   container_name: 'op-l2-goerli'
  #   ports:
  #     - '8545:8545'
  #     - '8060:6060'
  #   environment:
  #     BLOCK_SIGNER_PRIVATE_KEY: ${SEQ_KEY}
  #   volumes:
  #     - 'l2_data:/db'
  #     - '${PWD}/../data/genesis.json:/genesis.json'
  #     - '${PWD}/../data/jwt.txt:/config/jwt.txt'
  #   entrypoint: # pass the L2 specific flags by overriding the entry-point and adding extra arguments
  #     - '/bin/sh'
  #     - '/entrypoint.sh'
  #     - '--authrpc.jwtsecret=/config/jwt.txt'

  op-node:
    depends_on:
      - l2
    build:
      context: ../
      dockerfile: ./op-node/Dockerfile
      # cache_from:
      #   - type=local,src=/tmp/op-node-cache
      # cache_to:
      #   - type=local,src=/tmp/op-node-cache
      # tags:
      #   - 'near/op-node:latest'
    healthcheck:
      test: ['CMD', 'wget', '-q', '-O', '-', 'http://op-node:8545']
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s
      # --p2p.listen.ip=0.0.0.0
      # --p2p.listen.tcp=9003
      # --p2p.listen.udp=9003
      # --p2p.scoring.peers=light
      # --p2p.ban.peers=true
      # --p2p.priv.path=/config/p2p-node-key.txt REMOVED as not needed
    container_name: 'op-node-goerli'
    command: >
      op-node
      --l1=${L1_RPC}
      --l1.rpckind=${RPC_KIND:-alchemy}
      --l2=http://l2:8551
      --l2.jwt-secret=/config/jwt.txt
      --sequencer.enabled
      --sequencer.l1-confs=3
      --verifier.l1-confs=3
      --p2p.sequencer.key=d96f2ee74c8dd968d9dd89d54568417fad8d43267dae3ba0fdfcde0c95a38895
      --rollup.config=/rollup.json
      --rpc.addr=0.0.0.0
      --rpc.port=8545
      --p2p.disable
      --metrics.enabled
      --metrics.addr=0.0.0.0
      --metrics.port=7300
      --pprof.enabled
      --rpc.enable-admin
      --da-account=${DA_ACCOUNT}
      --da-contract=${DA_CONTRACT}
      --da-key-path=/root/.near-credentials/${DA_ACCOUNT}.json
      --namespace-id=000008e5f679bf7116cb
      --snapshotlog.file=/op_log/snapshot.log
    ports:
      - '7545:8545'
      - '9003:9003'
      - '7300:7300'
      - '6060:6060'
    volumes:
      - '${PWD}/p2p-sequencer-key.txt:/config/p2p-sequencer-key.txt'
      - '${PWD}/p2p-node-key.txt:/config/p2p-node-key.txt'
      - '${PWD}/../data/jwt.txt:/config/jwt.txt'
      - '${PWD}/../data/rollup.json:/rollup.json'
      - ~/.near-credentials/testnet:/root/.near-credentials
      - op_log:/op_log

  op-proposer:
    depends_on:
      - l2
      - op-node
    build:
      context: ../
      dockerfile: ./op-proposer/Dockerfile
      # cache_from:
      #   - type=local,src=/tmp/op-proposer-cache
      # cache_to:
      #   - type=local,src=/tmp/op-proposer-cache
      # tags:
      #   - 'near/op-proposer:latest'
    container_name: 'op-proposer-goerli'
    ports:
      - '6062:6060'
      - '7302:7300'
    volumes:
      - ~/.near-credentials/testnet:/root/.near-credentials
    environment:
      OP_PROPOSER_L1_ETH_RPC: ${L1_RPC}
      OP_PROPOSER_PRIVATE_KEY: ${PROPOSER_KEY} # TODO: not used yet
      OP_PROPOSER_ROLLUP_RPC: http://op-node:8545
      OP_PROPOSER_POLL_INTERVAL: 1s
      OP_PROPOSER_NUM_CONFIRMATIONS: 1
      OP_PROPOSER_SAFE_ABORT_NONCE_TOO_LOW_COUNT: 3
      OP_PROPOSER_RESUBMISSION_TIMEOUT: 30s
      OP_PROPOSER_L2_OUTPUT_HD_PATH: "m/44'/60'/0'/0/1"
      OP_PROPOSER_L2OO_ADDRESS: '${L2OO_ADDRESS}'
      OP_PROPOSER_PPROF_ENABLED: 'true'
      OP_PROPOSER_METRICS_ENABLED: 'true'
      OP_PROPOSER_ALLOW_NON_FINALIZED: 'false'
      OP_PROPOSER_NAMESPACE_ID: '00000aae0236e90166d3'
      OP_PROPOSER_NETWORK_TIMEOUT: 180s
      OP_PROPOSER_DA_ACCOUNT: ${DA_ACCOUNT}
      OP_PROPOSER_DA_CONTRACT: ${DA_CONTRACT}
      OP_PROPOSER_DA_KEY_PATH: /root/.near-credentials/${DA_ACCOUNT}.json

  op-batcher:
    depends_on:
      - l2
      - op-node
    build:
      context: ../
      dockerfile: ./op-batcher/Dockerfile
      # cache_from:
      #   - type=local,src=/tmp/op-batcher-cache
      # cache_to:
      #   - type=local,src=/tmp/op-batcher-cache
      # tags:
      #   - 'near/op-batcher:latest'
    ports:
      - '6061:6060'
      - '7301:7300'
      - '6545:8545'
    volumes:
      - ~/.near-credentials/testnet:/root/.near-credentials
    # healthcheck:
    #   test: ['CMD', 'wget', '-q', '-O', '-', 'http://da:26659/header/1']
    #   interval: 5s
    #   timeout: 5s
    #   retries: 5
    #   start_period: 10s
    container_name: 'op-batcher-goerli'
    environment:
      OP_BATCHER_L1_ETH_RPC: ${L1_RPC}
      OP_BATCHER_PRIVATE_KEY: ${BATCHER_KEY} # TODO: not used yet
      OP_BATCHER_L2_ETH_RPC: http://l2:8545
      OP_BATCHER_ROLLUP_RPC: http://op-node:8545
      OFFLINE_GAS_ESTIMATION: null
      OP_BATCHER_MAX_CHANNEL_DURATION: 4
      OP_BATCHER_MAX_L1_TX_SIZE_BYTES: 120000
      OP_BATCHER_TARGET_L1_TX_SIZE_BYTES: 100000
      OP_BATCHER_TARGET_NUM_FRAMES: 1
      OP_BATCHER_APPROX_COMPR_RATIO: 0.4
      OP_BATCHER_SUB_SAFETY_MARGIN: 4 # SWS is 15, ChannelTimeout is 40
      OP_BATCHER_POLL_INTERVAL: 1s
      OP_BATCHER_NUM_CONFIRMATIONS: 1
      OP_BATCHER_SAFE_ABORT_NONCE_TOO_LOW_COUNT: 3
      OP_BATCHER_RESUBMISSION_TIMEOUT: 30s
      OP_BATCHER_SEQUENCER_HD_PATH: "m/44'/60'/0'/0/2"
      OP_BATCHER_PPROF_ENABLED: 'true'
      OP_BATCHER_METRICS_ENABLED: 'true'
      OP_BATCHER_RPC_ENABLE_ADMIN: 'true'
      OP_BATCHER_NAMESPACE_ID: '00000aae0236e90166d3'
      OP_BATCHER_DA_ACCOUNT: ${DA_ACCOUNT}
      OP_BATCHER_DA_CONTRACT: ${DA_CONTRACT}
      OP_BATCHER_DA_KEY_PATH: /root/.near-credentials/${DA_ACCOUNT}.json

  stateviz:
    build:
      context: ../
      dockerfile: ./ops-bedrock/Dockerfile.stateviz
      # cache_from:
      #   - type=local,src=/tmp/op-stateviz-cache
      # cache_to:
      #   - type=local,src=/tmp/op-stateviz-cache
      # tags:
      #   - 'near/op-stateviz:latest'
    container_name: 'op-stateviz-goerli'
    command:
      - stateviz
      - -addr=0.0.0.0:8080
      - -snapshot=/op_log/snapshot.log
      - -refresh=10s
    ports:
      - '9090:8080'
    volumes:
      - op_log:/op_log:ro

  # ==== Blockscout ====
  redis_db:
    image: 'redis:alpine'
    ports:
      - 6379:6379
    container_name: 'blockscout-redis'
    command: redis-server
    volumes:
      - /mnt/data/redis-data:/data

  db:
    image: postgres:14
    restart: always
    container_name: 'blockscout-postgres'
    command: postgres -c 'max_connections=200'
    environment:
      POSTGRES_PASSWORD: ''
      POSTGRES_USER: 'postgres'
      POSTGRES_HOST_AUTH_METHOD: 'trust'
    ports:
      - 7432:5432
    volumes:
      - ${PWD}/../data/blockscout-db-data:/var/lib/postgresql/data/

  # podman --storage-opt ignore_chown_errors=true run --name=blockscout -d --requires=smart-contract-verifier,postgres,redis_db --label io.podman.compose.config-hash=d9714ace0618a34f7b68615490aeb40921404bc2cad413f86f02d7f897709bf2 --label io.podman.compose.project=docker-compose --label io.podman.compose.version=1.0.6 --label PODMAN_SYSTEMD_UNIT=podman-compose@docker-compose.service --label com.docker.compose.project=docker-compose --label com.docker.compose.project.working_dir=/home/common/projects/data-availability/blockscout/docker-compose --label com.docker.compose.project.config_files=docker-compose-no-build-geth.yml --label com.docker.compose.container-number=1 --label com.docker.compose.service=blockscout --env-file /home/common/projects/data-availability/blockscout/docker-compose/envs/common-blockscout.env -e ETHEREUM_JSONRPC_VARIANT=geth -e ETHEREUM_JSONRPC_HTTP_URL=http://host.containers.internal:8545/ -e DATABASE_URL=postgresql://postgres:@host.containers.internal:7432/blockscout?ssl=false -e ECTO_USE_SSL=false -e SECRET_KEY_BASE=56NtB48ear7+wMSf0IQuWDAAazhpb31qyc7GiyspBP2vh7t5zlCsF5QDv76chXeN -v /home/common/projects/data-availability/blockscout/docker-compose/logs:/app/logs/ --net docker-compose_default --network-alias blockscout -p 4000:4000 --pull always --restart always blockscout/blockscout:latest sh -c bin/blockscout eval "Elixir.Explorer.ReleaseTasks.create_and_migrate()" && bin/blockscout start
  blockscout:
    depends_on:
      - db
      - smart-contract-verifier
      - redis_db
    image: blockscout/blockscout:${DOCKER_TAG:-latest}
    pull_policy: always
    restart: always
    stop_grace_period: 5m
    container_name: 'blockscout'
    links:
      - db:database
    command: sh -c "bin/blockscout eval \"Elixir.Explorer.ReleaseTasks.create_and_migrate()\" && bin/blockscout start"
    env_file:
      - ${PWD}/envs/common-blockscout.env
    environment:
      ETHEREUM_JSONRPC_VARIANT: 'geth'
      ETHEREUM_JSONRPC_HTTP_URL: http://l2:8545/
      DATABASE_URL: postgresql://postgres:@db:5432/blockscout?ssl=false
      ECTO_USE_SSL: 'false'
      SECRET_KEY_BASE: '56NtB48ear7+wMSf0IQuWDAAazhpb31qyc7GiyspBP2vh7t5zlCsF5QDv76chXeN'
    ports:
      - 4000:4000
    # volumes:
    #   - ./logs/:/app/logs/

  smart-contract-verifier:
    image: ghcr.io/blockscout/smart-contract-verifier:${SMART_CONTRACT_VERIFIER_DOCKER_TAG:-latest}
    pull_policy: always
    platform: linux/amd64
    restart: always
    container_name: 'blockscout-smart-contract-verifier'
    env_file:
      - ${PWD}/envs/common-smart-contract-verifier.env
    ports:
      - 8150:8050

  visualizer:
    image: ghcr.io/blockscout/visualizer:${VISUALIZER_DOCKER_TAG:-latest}
    pull_policy: always
    platform: linux/amd64
    restart: always
    container_name: 'blockscout-visualizer'
    env_file:
      - ${PWD}/envs/common-visualizer.env
    ports:
      - 8152:8050

  sig-provider:
    image: ghcr.io/blockscout/sig-provider:${SIG_PROVIDER_DOCKER_TAG:-latest}
    pull_policy: always
    platform: linux/amd64
    restart: always
    container_name: 'blockscout-sig-provider'
    ports:
      - 8151:8050
